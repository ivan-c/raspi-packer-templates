{
    "variables": {
        "vm_name": "debian-arm64",
        "iso_url": "http://ftp.debian.org/debian/dists/bullseye/main/installer-arm64/current/images/netboot/mini.iso",
        "iso_checksum_type": "sha512",
        "iso_checksum": "8844c34a5b343b0f059f336a6c9b2502605e681df406b5535e846ac030705eee2ada0442864ef769f27cbd7161997076c22c2ba27a85df7baaf1ffdaa4ba055b",
        "ssh_username": "vagrant",
        "ssh_password": "vagrant",
        "ansible_version": "2.9.15",
        "rpi_firmware_version": "1.20200601",
        "ssh_wait_timeout": "6h",
        "output_directory": "./output-qemu",
        "disk_size_MB": "8000",
        "extra_env_vars": "",
        "extra_ansible_vars": ""
    },
    "builders": [
        {
            "type": "qemu",
            "accelerator": "kvm",
            "machine_type": "virt",
            "memory": 2048,
            "cpus": 2,
            "net_device": "virtio-net",
            "use_default_display": true,
            "vm_name": "{{ user `vm_name` }}",
            "iso_url": "{{ user `iso_url` }}",
            "iso_checksum_type": "{{ user `iso_checksum_type` }}",
            "iso_checksum": "{{ user `iso_checksum` }}",
            "ssh_username": "{{ user `ssh_username` }}",
            "ssh_password": "{{ user `ssh_password` }}",
            "ssh_wait_timeout": "{{ user `ssh_wait_timeout` }}",
            "disk_size": "{{ user `disk_size_MB` }}",
            "disk_detect_zeroes": "on",
            "disk_interface": "virtio-scsi",
            "format": "raw",
            "output_directory": "{{ user `output_directory` }}",
            "qemu_binary": "qemu-system-aarch64",
            "qemuargs": [
                [ "-bios", "/usr/share/qemu-efi-aarch64/QEMU_EFI.fd" ],
                [ "-machine", "virt,gic-version=3" ],
                [ "-cpu", "cortex-a53" ],
                [ "-monitor", "none" ],
                [ "-boot", "strict=off" ]
            ],
            "headless": true,
            "http_directory": "http",
            "boot_command": [
                "c<wait>",
                "linux /linux ",
                "locale=en_US.UTF-8 ",
                "keyboard-configuration/xkb-keymap=us ",
                "debconf/frontend=noninteractive ",
                "netcfg/get_hostname=unassigned-hostname ",
                "netcfg/get_domain=unassigned-domain ",
                "passwd/username={{ user `ssh_username` }} ",
                "passwd/user-fullname={{ user `ssh_username` }} ",
                "passwd/user-password={{ user `ssh_password` }} ",
                "passwd/user-password-again={{ user `ssh_password` }} ",
                "url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg<wait> ",
                "auto ",
                "---",
                "<enter><wait>",
                "initrd /initrd.gz",
                "<enter><wait>",
                "boot<enter><wait>"
            ],
            "shutdown_command": "sudo shutdown"
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "execute_command": "sudo {{ .Vars }} sh {{.Path}}",
            "environment_vars": "{{ user `extra_env_vars` }}",
            "scripts": [
                "scripts/apt-pinning.sh",
                "scripts/fixup-iptables.sh"
            ]
        },
        {
            "type": "shell",
            "execute_command": "if [ -n '{{user `rpi_firmware_version`}}' ]; then sudo {{ .Vars }} sh {{.Path}} {{user `rpi_firmware_version`}}; fi",
            "environment_vars": "{{ user `extra_env_vars` }}",
            "script": "scripts/raspi-firmware.sh"
        },
        {
            "type": "shell",
            "pause_after": "5m",
            "inline": ["sudo shutdown --reboot"],
            "expect_disconnect": true
        },
        {
            "type": "shell",
            "execute_command": "sudo {{ .Vars }} sh {{.Path}} {{ user `ansible_version` }}",
            "environment_vars": "{{ user `extra_env_vars` }}",
            "script": "scripts/install-ansible.sh"
        },
        {
            "type": "ansible-local",
            "playbook_file": "./local.yaml",
            "galaxy_file": "./requirements.yaml",
            "inventory_groups": "docker_hosts,k8s_hosts",
            "group_vars": "./group_vars",
            "command": "sudo ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 ansible-playbook -vv",
            "extra_arguments": ["--extra-vars", "\"ansible_python_interpreter=python3 {{ user `extra_ansible_vars` }}\""]
        },
        {
            "type": "shell",
            "execute_command": "sudo {{ .Vars }} sh {{.Path}}",
            "script": "scripts/cleanup.debian.sh"
        }
    ]
}
